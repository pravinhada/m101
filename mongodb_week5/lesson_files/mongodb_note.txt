db.products.aggregate([{$group:{"_id":"$category", "num_products":{$sum:1}}}])
[] is aggregate pipeline
[{},{},{}..]

Compound grouping:
db.stuff.aggregate([{$group:
		     {_id:
		      {'moe':'$a', 
		       'larry':'$b',
		       'curly':'$c'
		      }
		     }
		    }])

Sum:
db.zips.aggregate([{$group:{_id:"$state", "population":{$sum:"$pop"}}}])

Avg:
db.zips.aggregate([{$group:{_id:"$state", "average_pop":{$avg:"$pop"}}}])

addtoset:
db.zips.aggregate([{"$group":{"_id":"$city", "postal_codes":{"$addToSet":"$_id"}}}])

Max:
db.zips.aggregate([{"$group":{"_id":"$state","pop":{"$max":"$pop"}}}])

Min:
db.zips.aggregate([{"$group":{"_id":"$state","pop":{"$min:"$pop"}}}])

Double Grouping:
{ "_id" : 0, "a" : 0, "b" : 0, "c" : 21 }
{ "_id" : 1, "a" : 0, "b" : 0, "c" : 54 }
{ "_id" : 2, "a" : 0, "b" : 1, "c" : 52 }
{ "_id" : 3, "a" : 0, "b" : 1, "c" : 17 }
{ "_id" : 4, "a" : 1, "b" : 0, "c" : 22 }
{ "_id" : 5, "a" : 1, "b" : 0, "c" : 5 }
{ "_id" : 6, "a" : 1, "b" : 1, "c" : 87 }
{ "_id" : 7, "a" : 1, "b" : 1, "c" : 97 }
db.fun.aggregate([{$group:{_id:{a:"$a", b:"$b"}, c:{$max:"$c"}}}, {$group:{_id:"$_id.a", c:{$min:"$c"}}}])
52 and 22

Project:
db.zips.aggregate([{"$project":{_id:0, "city":{"$toLower":"$city"}, pop:1, 
state:1,"zip":"$_id"}}])

Match:
db.zips.aggregate([{$match:{"pop":{$gt:100000}}}])

Sort:
db.zips.aggregate([{$sort:{state:1,city:1}}])

First, Last:
{ "_id" : 0, "a" : 0, "b" : 0, "c" : 21 }
{ "_id" : 1, "a" : 0, "b" : 0, "c" : 54 }
{ "_id" : 2, "a" : 0, "b" : 1, "c" : 52 }
{ "_id" : 3, "a" : 0, "b" : 1, "c" : 17 }
{ "_id" : 4, "a" : 1, "b" : 0, "c" : 22 }
{ "_id" : 5, "a" : 1, "b" : 0, "c" : 5 }
{ "_id" : 6, "a" : 1, "b" : 1, "c" : 87 }
{ "_id" : 7, "a" : 1, "b" : 1, "c" : 97 }
db.fun.aggregate([
    {$match:{a:0}},
    {$sort:{c:-1}}, 
    {$group:{_id:"$a", c:{$first:"$c"}}}
])
Ans: 54

Unwind:
db.inventory.aggregate([{$unwind:"$size"}])